public class TrainingController {
    
    public static void generateProjectPathTraining(Id projectId, Id employeeId, String role){
        Id ppRecordTypeId = '0121I000000IhIaQAK'; //siempre es el mismo
        Training__c t = new Training__c();
        t.RecordTypeId = ppRecordTypeId;
        t.Project__c = projectId;
        t.Trainee__c = employeeId;
        t.Start_Date__c = Date.today();
        t.Notes__c = 'Training generated by the app.';
        
        Employee__c empRole = [SELECT Name, Role__c FROM Employee__c WHERE Id=:employeeId];
        List<Technology__c> techs = [SELECT Name, Oriented_To__c, Resources__c FROM Technology__c WHERE Id IN (SELECT Technology__c FROM Project_Technology__c WHERE Project__c =: projectId)];
        
        t.Topics__c = 'For ' + role + ': \n';
        t.Resources__c = '';

        for(Technology__c tech : techs){
            if(tech.Oriented_To__c	== role){
                t.Topics__c += tech.Name + '\n';
                t.Resources__c += tech.Resources__c + '\n';
            }
        }
        
        List<Employee__c> trainers = [SELECT Id, Name, Role__c FROM Employee__c WHERE (Role__c = 'Project Manager' OR Role__c = 'Team Leader' ) AND Id IN (SELECT Employee__c FROM Project_Team_Member__c WHERE Project__c =: projectId) ORDER BY Role__c ASC LIMIT 1];
        if(trainers.size() > 0){
            t.Trainer__c = trainers[0].Id;
        }
        
        Project__c proj = [SELECT Id, Name FROM Project__c WHERE Id=:projectId];
        t.Name = empRole.Name + ' (' + proj.Name + ')'; 
        
        insert t;
    }

}